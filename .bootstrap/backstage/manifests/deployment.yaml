apiVersion: apps/v1
kind: Deployment
metadata:
  name: backstage
  namespace: backstage-system
  labels:
    app: backstage
    backstage.io/kubernetes-id: backstage
    backstage.io/kubernetes-namespace: backstage-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backstage
  template:
    metadata:
      labels:
        app: backstage
        backstage.io/kubernetes-id: backstage
        backstage.io/kubernetes-namespace: backstage-system
    spec:
      serviceAccountName: backstage-user
      containers:
        - name: backstage
          image: backstage:latest
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 7007
          envFrom:
            - configMapRef:
                name: backstage-config
            - secretRef:
                name: postgres-secrets
            - secretRef:
                name: backstage-secrets
          env:
            - name: SERVICE_ACCOUNT_TOKEN
              valueFrom:
                secretKeyRef:
                  name: backstage-token
                  key: token
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: backstage-system
  labels:
    app: postgres
    backstage.io/kubernetes-id: backstage-postgres
    backstage.io/kubernetes-namespace: backstage-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
        backstage.io/kubernetes-id: backstage-postgres
        backstage.io/kubernetes-namespace: backstage-system
    spec:
      containers:
        - name: postgres
          image: postgres:13.2-alpine
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 5432
          envFrom:
            - secretRef:
                name: postgres-secrets
          env:
            - name: POSTGRES_HOST
              value: postgres.backstage-system
            - name: POSTGRES_PORT
              value: "5432"
