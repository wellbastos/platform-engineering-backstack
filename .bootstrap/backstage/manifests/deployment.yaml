apiVersion: apps/v1
kind: Deployment
metadata:
  name: backstage
  namespace: backstage-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backstage
  template:
    metadata:
      labels:
        app: backstage
    spec:
      containers:
        - name: backstage
          image: backstage:1.0.0
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 7007
          envFrom:
            - configMapRef:
                name: backstage-config
            - secretRef:
                name: postgres-secrets
            - secretRef:
                name: backstage-secrets
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: backstage-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:13.2-alpine
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 5432
          envFrom:
            - secretRef:
                name: postgres-secrets
          env:
            - name: POSTGRES_HOST
              value: postgres.backstage-system
            - name: POSTGRES_PORT
              value: "5432"
      #     volumeMounts:
      #       - mountPath: /var/lib/postgresql/data
      #         name: postgresdb
      #         subPath: data
      # volumes:
      #   - name: postgresdb
      #     persistentVolumeClaim:
      #       claimName: postgres-storage-claim
